// Generated by view binder compiler. Do not edit!
package com.rockex6.app.foodsslots.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.rockex6.app.foodsslots.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogContentViewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final View divide;

  @NonNull
  public final View divide1;

  @NonNull
  public final TextView vCancel;

  @NonNull
  public final TextView vDeleteItem;

  @NonNull
  public final TextView vMessage;

  @NonNull
  public final EditText vName;

  @NonNull
  public final TextView vSubmit;

  @NonNull
  public final TextView vTitle;

  private DialogContentViewBinding(@NonNull RelativeLayout rootView, @NonNull View divide,
      @NonNull View divide1, @NonNull TextView vCancel, @NonNull TextView vDeleteItem,
      @NonNull TextView vMessage, @NonNull EditText vName, @NonNull TextView vSubmit,
      @NonNull TextView vTitle) {
    this.rootView = rootView;
    this.divide = divide;
    this.divide1 = divide1;
    this.vCancel = vCancel;
    this.vDeleteItem = vDeleteItem;
    this.vMessage = vMessage;
    this.vName = vName;
    this.vSubmit = vSubmit;
    this.vTitle = vTitle;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogContentViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogContentViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_content_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogContentViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divide;
      View divide = rootView.findViewById(id);
      if (divide == null) {
        break missingId;
      }

      id = R.id.divide1;
      View divide1 = rootView.findViewById(id);
      if (divide1 == null) {
        break missingId;
      }

      id = R.id.vCancel;
      TextView vCancel = rootView.findViewById(id);
      if (vCancel == null) {
        break missingId;
      }

      id = R.id.vDeleteItem;
      TextView vDeleteItem = rootView.findViewById(id);
      if (vDeleteItem == null) {
        break missingId;
      }

      id = R.id.vMessage;
      TextView vMessage = rootView.findViewById(id);
      if (vMessage == null) {
        break missingId;
      }

      id = R.id.vName;
      EditText vName = rootView.findViewById(id);
      if (vName == null) {
        break missingId;
      }

      id = R.id.vSubmit;
      TextView vSubmit = rootView.findViewById(id);
      if (vSubmit == null) {
        break missingId;
      }

      id = R.id.vTitle;
      TextView vTitle = rootView.findViewById(id);
      if (vTitle == null) {
        break missingId;
      }

      return new DialogContentViewBinding((RelativeLayout) rootView, divide, divide1, vCancel,
          vDeleteItem, vMessage, vName, vSubmit, vTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
